openapi: 3.0.2
info:
  title: StoryBoom AI API
  description: |
    API for StoryBoom AI - Case Study Generation Platform
    
    This API provides endpoints for:
    - User authentication and management
    - Case study creation and management
    - Interview management (provider and client)
    - Media generation (videos, podcasts)
    - Feedback collection and analysis
    - Metadata analysis
    
    ## Authentication
    Most endpoints require authentication. Use session-based authentication by logging in first.
    
    ## Rate Limits
    API calls are limited to prevent abuse. Contact support if you need higher limits.
    
    ## IP Access
    For production access, contact support to whitelist your IP address.
  version: 1.0.0
  contact:
    name: StoryBoom AI Support
    email: storyboomai@gmail.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:10000
    description: Development server
  - url: https://your-production-domain.com
    description: Production server

security:
  - ApiKeyAuth: []

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Session-based authentication (login required)
  
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          description: User ID
        first_name:
          type: string
          description: User's first name
        last_name:
          type: string
          description: User's last name
        email:
          type: string
          format: email
          description: User's email address
        company_name:
          type: string
          description: User's company name
        created_at:
          type: string
          format: date-time
          description: Account creation date
        last_login:
          type: string
          format: date-time
          description: Last login date
        is_verified:
          type: boolean
          description: Email verification status
    
    UserCreate:
      type: object
      required:
        - first_name
        - last_name
        - email
        - password
      properties:
        first_name:
          type: string
          minLength: 1
          maxLength: 100
        last_name:
          type: string
          minLength: 1
          maxLength: 100
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 8
        company_name:
          type: string
          maxLength: 255
    
    UserLogin:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
    
    CaseStudy:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        final_summary:
          type: string
        meta_data_text:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        video_status:
          type: string
        pictory_video_status:
          type: string
        podcast_status:
          type: string
        labels:
          type: array
          items:
            $ref: '#/components/schemas/Label'
    
    Label:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    
    Feedback:
      type: object
      properties:
        id:
          type: integer
        content:
          type: string
        rating:
          type: integer
          minimum: 1
          maximum: 5
        feedback_type:
          type: string
        created_at:
          type: string
          format: date-time
        feedback_summary:
          type: string
    
    Error:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
        status:
          type: string

paths:
  # Authentication endpoints
  /api/signup:
    post:
      tags:
        - Authentication
      summary: Register a new user
      description: Create a new user account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: User already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /api/login:
    post:
      tags:
        - Authentication
      summary: User login
      description: Authenticate user and create session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '423':
          description: Account locked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /api/logout:
    post:
      tags:
        - Authentication
      summary: User logout
      description: End user session
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  
  /api/user:
    get:
      tags:
        - Authentication
      summary: Get current user
      description: Retrieve current user information
      responses:
        '200':
          description: User information retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  # Case Study endpoints
  /api/case_studies:
    get:
      tags:
        - Case Studies
      summary: Get all case studies
      description: Retrieve all case studies for the current user
      parameters:
        - name: label
          in: query
          description: Filter by label ID
          schema:
            type: integer
      responses:
        '200':
          description: Case studies retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  case_studies:
                    type: array
                    items:
                      $ref: '#/components/schemas/CaseStudy'
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /api/case_studies/{case_study_id}:
    get:
      tags:
        - Case Studies
      summary: Get case study by ID
      description: Retrieve a specific case study
      parameters:
        - name: case_study_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Case study retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  case_study:
                    $ref: '#/components/schemas/CaseStudy'
        '404':
          description: Case study not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  # Labels endpoints
  /api/labels:
    get:
      tags:
        - Labels
      summary: Get all labels
      description: Retrieve all labels for the current user
      responses:
        '200':
          description: Labels retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  labels:
                    type: array
                    items:
                      $ref: '#/components/schemas/Label'
    
    post:
      tags:
        - Labels
      summary: Create a new label
      description: Create a new label for organizing case studies
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
      responses:
        '200':
          description: Label created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  label:
                    $ref: '#/components/schemas/Label'
  
  /api/labels/{label_id}:
    patch:
      tags:
        - Labels
      summary: Rename a label
      description: Update the name of an existing label
      parameters:
        - name: label_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
      responses:
        '200':
          description: Label renamed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  label:
                    $ref: '#/components/schemas/Label'
    
    delete:
      tags:
        - Labels
      summary: Delete a label
      description: Remove a label (case studies will not be deleted)
      parameters:
        - name: label_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Label deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
  
  # Feedback endpoints
  /api/feedback/start:
    post:
      tags:
        - Feedback
      summary: Start feedback session
      description: Initialize a new feedback collection session
      responses:
        '200':
          description: Feedback session started
          content:
            application/json:
              schema:
                type: object
                properties:
                  session_id:
                    type: string
                  status:
                    type: string
  
  /api/feedback/submit:
    post:
      tags:
        - Feedback
      summary: Submit feedback
      description: Submit user feedback with optional rating
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - content
              properties:
                content:
                  type: string
                  description: Feedback content
                rating:
                  type: integer
                  minimum: 1
                  maximum: 5
                  description: Optional rating (1-5)
                feedback_type:
                  type: string
                  default: general
                  description: Type of feedback
      responses:
        '200':
          description: Feedback submitted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  feedback_id:
                    type: integer
                  feedback_summary:
                    type: string
  
  /api/feedback/history:
    get:
      tags:
        - Feedback
      summary: Get feedback history
      description: Retrieve feedback history for the current user
      responses:
        '200':
          description: Feedback history retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  feedbacks:
                    type: array
                    items:
                      $ref: '#/components/schemas/Feedback'
  
  /api/feedback/analyze:
    post:
      tags:
        - Feedback
      summary: Analyze all feedback
      description: Generate comprehensive analysis of all feedback
      responses:
        '200':
          description: Feedback analysis completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  comprehensive_summary:
                    type: string
                  statistics:
                    type: object
                  total_feedback_analyzed:
                    type: integer
                  generated_at:
                    type: string
                    format: date-time
  
  # Interview endpoints
  /api/save_provider_summary:
    post:
      tags:
        - Interviews
      summary: Save provider interview summary
      description: Save the summary from a solution provider interview
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - case_study_id
                - summary
              properties:
                case_study_id:
                  type: integer
                summary:
                  type: string
      responses:
        '200':
          description: Provider summary saved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  case_study_id:
                    type: integer
                  status:
                    type: string
  
  /api/save_client_transcript:
    post:
      tags:
        - Interviews
      summary: Save client interview transcript
      description: Save transcript from a client interview (requires token)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - transcript
                - token
              properties:
                transcript:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Client transcript saved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  filename:
                    type: string
  
  /api/generate_client_summary:
    post:
      tags:
        - Interviews
      summary: Generate client summary
      description: Generate summary from client interview transcript
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - transcript
                - token
              properties:
                transcript:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Client summary generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  client_summary:
                    type: string
                  status:
                    type: string
  
  # Media generation endpoints
  /api/generate_video:
    post:
      tags:
        - Media
      summary: Generate video
      description: Generate a video using HeyGen API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - case_study_id
              properties:
                case_study_id:
                  type: integer
      responses:
        '200':
          description: Video generation started
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  video_id:
                    type: string
                  message:
                    type: string
  
  /api/video_status/{video_id}:
    get:
      tags:
        - Media
      summary: Check video status
      description: Check the status of video generation
      parameters:
        - name: video_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Video status retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  video_url:
                    type: string
                  message:
                    type: string
  
  /api/generate_pictory_video:
    post:
      tags:
        - Media
      summary: Generate Pictory video
      description: Generate a video using Pictory API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - case_study_id
              properties:
                case_study_id:
                  type: integer
      responses:
        '200':
          description: Pictory video generation started
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  storyboard_job_id:
                    type: string
                  message:
                    type: string
  
  /api/generate_podcast:
    post:
      tags:
        - Media
      summary: Generate podcast
      description: Generate a podcast using Wondercraft API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - case_study_id
              properties:
                case_study_id:
                  type: integer
      responses:
        '200':
          description: Podcast generation started
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  job_id:
                    type: string
                  message:
                    type: string
  
  # Metadata endpoints
  /api/metadata/analyze:
    post:
      tags:
        - Metadata
      summary: Analyze metadata
      description: Analyze metadata for a case study
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - case_study_id
              properties:
                case_study_id:
                  type: integer
      responses:
        '200':
          description: Metadata analysis completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  metadata:
                    type: object
  
  /api/metadata/regenerate/{case_study_id}:
    post:
      tags:
        - Metadata
      summary: Regenerate metadata
      description: Regenerate metadata for an existing case study
      parameters:
        - name: case_study_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Metadata regenerated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  metadata:
                    type: object
  
  # File download endpoints
  /api/download/{filename}:
    get:
      tags:
        - Files
      summary: Download file
      description: Download a generated file (PDF, Word document, etc.)
      parameters:
        - name: filename
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: File downloaded successfully
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  
  /api/sentiment_chart/{case_study_id}:
    get:
      tags:
        - Metadata
      summary: Get sentiment chart
      description: Retrieve sentiment analysis chart for a case study
      parameters:
        - name: case_study_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Sentiment chart retrieved
          content:
            image/png:
              schema:
                type: string
                format: binary

tags:
  - name: Authentication
    description: User authentication and management
  - name: Case Studies
    description: Case study creation and management
  - name: Labels
    description: Label management for organizing case studies
  - name: Feedback
    description: User feedback collection and analysis
  - name: Interviews
    description: Interview management (provider and client)
  - name: Media
    description: Media generation (videos, podcasts)
  - name: Metadata
    description: Metadata analysis and sentiment analysis
  - name: Files
    description: File download and serving 